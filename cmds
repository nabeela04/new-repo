1. Clone a repository:
Cloning creates a local copy of a remote repository.

bash
Copy code
git clone <repository_url>
Example:

bash
Copy code
git clone https://github.com/username/repository.git
2. Commit changes:
After modifying files, commit your changes locally.

bash
Copy code
git add <file_name>  # or git add . to add all modified files
git commit -m "Your commit message"
3. Push changes:
To send your local commits to the remote repository (e.g., GitHub):

bash
Copy code
git push origin <branch_name>
Example:

bash
Copy code
git push origin main
4. Fetch updates:
To fetch the latest changes from the remote repository without merging them into your local branch:

bash
Copy code
git fetch origin
5. Pull updates:
To fetch the latest changes and merge them into your current branch:

bash
Copy code
git pull origin <branch_name>
Example:

bash
Copy code
git pull origin main
6. Checkout a branch or specific commit:
To switch to another branch or a specific commit:

bash
Copy code
git checkout <branch_name>
Example:

bash
Copy code
git checkout main
To checkout a specific commit:

bash
Copy code
git checkout <commit_hash>
7. Reset changes:
To reset your local branch to a previous state:

Soft reset (keeps changes in staging):
bash
Copy code
git reset --soft <commit_hash>
Hard reset (removes changes):
bash
Copy code
git reset --hard <commit_hash>
Example:

bash
Copy code
git reset --hard HEAD~1  # reset to one commit before the current
8. Delete a branch:
Locally:
bash
Copy code
git branch -d <branch_name>
Remotely:
bash
Copy code
git push origin --delete <branch_name>
9. Delete files:
To delete a file and stage that deletion:

bash
Copy code
git rm <file_name>
git commit -m "Deleted <file_name>"
git push origin <branch_name>
Additional Tips:
To check the status of your repository:
bash
Copy code
git status
To view the commit log:
bash
Copy code
git log
